
#user  nobody;
worker_processes  auto;

events {
    worker_connections  10000;
    multi_accept on;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format log_json '{'
        '"time_iso8601": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"request": "$request", '
        '"request_length": "$request_length", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"upstream_response_time": "$upstream_response_time", '
        '"status": "$status", '
        '"upstream_status": "$upstream_status", '
        '"http_host": "$http_host", '
        '"server_name": "$server_name", '
        '"server_addr": "$server_addr", '
        '"server_port": "$server_port", '
        '"upstream_addr": "$upstream_addr", '
        '"http_referer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_ng_real_ip": "$http_ng_real_ip", '
        '"request_body": "$request_body", '
        '"response_body": "$response_body", '
    '}\r\n';
    sendfile       on;
    tcp_nopush     on;
    client_body_buffer_size 64k;
    client_max_body_size 20m;

    keepalive_timeout  0;

    gzip on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 9;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "msie6";

    server {
        listen       80 default;
        server_name  localhost;
        proxy_set_header Host $http_host;
        proxy_set_header Ng-real-ip $remote_addr;

        # save as new logfile by date
        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;

        }

        access_log  logs/access.log_$year.$month.$day log_json;

        set $response_body "";

        # put the follow into server context or location context
        lua_need_request_body on;
        body_filter_by_lua '
            local response_body = ngx.arg[1]
            ngx.ctx.buffered = (ngx.ctx.buffered or"") .. response_body
            if ngx.arg[2] then
                    ngx.var.response_body = ngx.ctx.buffered
            end
        ';

        # allow to view the stauts of nginx
        location /my_ngx_status {
            stub_status on;
            access_log off;
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

    }

}

